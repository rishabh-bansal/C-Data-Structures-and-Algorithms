#include<iostream>
using namespace std;
void initialize(int a[],int n);
int main()
{
    int n=5;

    int e=10;

    int arr[e][3]={{0,1,6},{0,2,7},{1,2,8},{1,3,5},{1,4,-4},{2,3,-3},{2,4,9},{3,1,-2,},{4,0,2},{4,3,7}};
    int a[n],i,j;
    initialize(a,n);
    for(i=0;i<n-1;i++)
    {
        for(j=0;j<e;j++)
        {
            if(a[arr[j][1]]>arr[j][2]+a[arr[j][0]])
            {
                a[arr[j][1]]=arr[j][2]+a[arr[j][0]];
            }
        }
    }
    int p=0;
        for(j=0;j<e;j++)
        {
            if(a[arr[j][1]]>arr[j][2]+a[arr[j][0]])
            {
                a[arr[j][1]]=arr[j][2]+a[arr[j][0]];
                p=1;
                break;
            }
        }
        if(p==1)
        {
            cout<<"negative weight cycle exist\n";
        }
        else
        {
                for(i=1;i<n;i++)
                 {
                     cout<<"shortest distance from vertex 0 to vertex "<<i<<" is "<<a[i]<<endl;
                 }
        }
}
void initialize(int a[],int n)
{
    int i;
    for(i=0;i<n;i++)
    {
        a[i]=INT_MAX;
    }
    a[0]=0;
}

